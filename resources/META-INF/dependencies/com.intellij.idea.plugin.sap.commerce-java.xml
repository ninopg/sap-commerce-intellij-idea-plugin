<!--
  ~ This file is part of "SAP Commerce Developers Toolset" plugin for IntelliJ IDEA.
  ~ Copyright (C) 2019-2025 EPAM Systems <hybrisideaplugin@epam.com> and contributors
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation, either version 3 of the
  ~ License, or (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  ~ See the GNU Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public License
  ~ along with this program. If not, see <http://www.gnu.org/licenses/>.
  -->

<idea-plugin>

    <extensions defaultExtensionNs="com.intellij">

        <!-- We cannot rely on `context.isRebuild` as it will be false in case of modules of various types.-->
        <!-- Thus, we're looking for Platform module.-->
        <!-- See ModulesBuildSettings.isRebuild.-->
        <compiler.task execute="BEFORE" implementation="com.intellij.idea.plugin.hybris.project.compile.ProjectBeforeCompilerTask"/>
        <compiler.task execute="AFTER" implementation="com.intellij.idea.plugin.hybris.project.compile.ProjectAfterCompilerTask"/>

        <defaultLiveTemplates file="liveTemplates/Java.xml"/>

        <projectImportProvider implementation="com.intellij.idea.plugin.hybris.project.HybrisProjectImportProvider"/>
        <projectImportBuilder implementation="com.intellij.idea.plugin.hybris.project.DefaultHybrisProjectImportBuilder"/>
        <projectImportBuilder implementation="com.intellij.idea.plugin.hybris.project.OpenHybrisProjectImportBuilder"/>
        <projectOpenProcessor implementation="com.intellij.idea.plugin.hybris.project.HybrisProjectOpenProcessor"/>
        <writingAccessProvider implementation="com.intellij.idea.plugin.hybris.project.providers.HybrisWritingAccessProvider" />
        <nonProjectFileWritingAccessExtension implementation="com.intellij.idea.plugin.hybris.project.providers.HybrisNonProjectFileWritingAccessExtension"/>

        <applicationService serviceInterface="com.intellij.idea.plugin.hybris.project.services.HybrisProjectService"
                            serviceImplementation="com.intellij.idea.plugin.hybris.project.services.impl.DefaultHybrisProjectService"/>

        <applicationService serviceImplementation="com.intellij.idea.plugin.hybris.project.configurators.impl.DefaultContentRootConfigurator"/>

        <applicationService serviceInterface="com.intellij.idea.plugin.hybris.project.configurators.GroupModuleConfigurator"
                            serviceImplementation="com.intellij.idea.plugin.hybris.project.configurators.impl.DefaultGroupModuleConfigurator"/>

        <applicationService serviceInterface="com.intellij.idea.plugin.hybris.project.configurators.LibRootsConfigurator"
                            serviceImplementation="com.intellij.idea.plugin.hybris.project.configurators.impl.DefaultLibRootsConfigurator"/>

        <applicationService serviceInterface="com.intellij.idea.plugin.hybris.project.configurators.JavadocSettingsConfigurator"
                            serviceImplementation="com.intellij.idea.plugin.hybris.project.configurators.impl.DefaultJavadocSettingsConfigurator"/>

        <applicationService serviceInterface="com.intellij.idea.plugin.hybris.project.configurators.ModuleDependenciesConfigurator"
                            serviceImplementation="com.intellij.idea.plugin.hybris.project.configurators.impl.DefaultModuleDependenciesConfigurator"/>

        <applicationService serviceInterface="com.intellij.idea.plugin.hybris.project.configurators.ModuleSettingsConfigurator"
                            serviceImplementation="com.intellij.idea.plugin.hybris.project.configurators.impl.DefaultModuleSettingsConfigurator"/>

        <applicationService serviceInterface="com.intellij.idea.plugin.hybris.project.configurators.SearchScopeConfigurator"
                            serviceImplementation="com.intellij.idea.plugin.hybris.project.configurators.impl.DefaultSearchScopeConfigurator"/>

        <applicationService serviceInterface="com.intellij.idea.plugin.hybris.project.configurators.JavaCompilerConfigurator"
                            serviceImplementation="com.intellij.idea.plugin.hybris.project.configurators.impl.DefaultJavaCompilerConfigurator"/>

        <codeInsight.lineMarkerProvider language="JAVA" implementationClass="com.intellij.idea.plugin.hybris.system.type.codeInsight.daemon.JaloItemLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="JAVA" implementationClass="com.intellij.idea.plugin.hybris.system.type.codeInsight.daemon.ModelEnumLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="JAVA" implementationClass="com.intellij.idea.plugin.hybris.system.type.codeInsight.daemon.ModelItemLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="JAVA" implementationClass="com.intellij.idea.plugin.hybris.system.type.codeInsight.daemon.ModelItemAttributeMethodLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="JAVA" implementationClass="com.intellij.idea.plugin.hybris.system.type.codeInsight.daemon.ModelItemAttributeFieldLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="JAVA" implementationClass="com.intellij.idea.plugin.hybris.system.type.codeInsight.daemon.ModelEnumValueLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="JAVA" implementationClass="com.intellij.idea.plugin.hybris.codeInsight.daemon.PopulatorsLineMarkerProvider"/>

        <codeInsight.lineMarkerProvider language="JAVA" implementationClass="com.intellij.idea.plugin.hybris.system.bean.codeInsight.daemon.DtoBeanLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="JAVA" implementationClass="com.intellij.idea.plugin.hybris.system.bean.codeInsight.daemon.DtoEnumLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="JAVA" implementationClass="com.intellij.idea.plugin.hybris.system.bean.codeInsight.daemon.DtoEnumValueLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="JAVA" implementationClass="com.intellij.idea.plugin.hybris.system.bean.codeInsight.daemon.DtoBeanPropertyLineMarkerProvider"/>

        <codeInsight.lineMarkerProvider language="JAVA" implementationClass="com.intellij.idea.plugin.hybris.flexibleSearch.codeInsight.daemon.FlexibleSearchQueryLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="JAVA" implementationClass="com.intellij.idea.plugin.hybris.polyglotQuery.codeInsight.daemon.PolyglotQueryLineMarkerProvider"/>

        <codeInsight.declarativeInlayProvider language="JAVA"
                                              implementationClass="com.intellij.idea.plugin.hybris.codeInsight.hints.DynamicAttributeDeclarativeInlayProvider"
                                              isEnabledByDefault="true"
                                              group="METHOD_CHAINS_GROUP"
                                              providerId="hybris.typeSystem"
                                              bundle="i18n/HybrisBundle"
                                              nameKey="hybris.editor.java.inlay_provider.dynamic_attribute.name"
                                              descriptionKey="hybris.editor.java.inlay_provider.dynamic_attribute.description"/>
        <codeInsight.inlayActionHandler handlerId="inlay.hybris.dynamic.attribute"
                                        implementationClass="com.intellij.idea.plugin.hybris.codeInsight.hints.DynamicAttributeDeclarativeInlayActionHandler"/>
        <codeInsight.inlayProvider language="XML"
                                   implementationClass="com.intellij.idea.plugin.hybris.system.type.codeInsight.hints.ItemsXmlInlayHintsProvider"/>
        <codeInsight.inlayProvider language="XML"
                                   implementationClass="com.intellij.idea.plugin.hybris.system.bean.codeInsight.hints.BeansXmlInlayHintsProvider"/>

        <codeInsight.daemonBoundCodeVisionProvider implementation="com.intellij.idea.plugin.hybris.system.java.codeInsight.hints.LoggerInlayHintsProvider"/>
        
    </extensions>

</idea-plugin>
